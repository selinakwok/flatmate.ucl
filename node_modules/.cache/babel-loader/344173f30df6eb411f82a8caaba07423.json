{"ast":null,"code":"import { Ono as OnoConstructor } from \"./constructor\";\nconst singleton = ono;\nexport { singleton as ono };\nono.error = new OnoConstructor(Error);\nono.eval = new OnoConstructor(EvalError);\nono.range = new OnoConstructor(RangeError);\nono.reference = new OnoConstructor(ReferenceError);\nono.syntax = new OnoConstructor(SyntaxError);\nono.type = new OnoConstructor(TypeError);\nono.uri = new OnoConstructor(URIError);\nconst onoMap = ono;\n/**\n * Creates a new error with the specified message, properties, and/or inner error.\n * If an inner error is provided, then the new error will match its type, if possible.\n */\n\nfunction ono() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  let originalError = args[0]; // Is the first argument an Error-like object?\n\n  if (typeof originalError === \"object\" && typeof originalError.name === \"string\") {\n    // Try to find an Ono singleton method that matches this error type\n    for (let typedOno of Object.values(onoMap)) {\n      if (typeof typedOno === \"function\" && typedOno.name === \"ono\") {\n        let species = typedOno[Symbol.species];\n\n        if (species && species !== Error && (originalError instanceof species || originalError.name === species.name)) {\n          // Create an error of the same type\n          return typedOno.apply(undefined, args);\n        }\n      }\n    }\n  } // By default, create a base Error object\n\n\n  return ono.error.apply(undefined, args);\n}","map":{"version":3,"mappings":"AACA,SAASA,GAAG,IAAIC,cAAhB,QAAsC,eAAtC;AAGA,MAAMC,SAAS,GAAGC,GAAlB;AACA,SAASD,SAAS,IAAIC,GAAtB;AAEAA,GAAG,CAACC,KAAJ,GAAY,IAAIH,cAAJ,CAAmBI,KAAnB,CAAZ;AACAF,GAAG,CAACG,IAAJ,GAAW,IAAIL,cAAJ,CAAmBM,SAAnB,CAAX;AACAJ,GAAG,CAACK,KAAJ,GAAY,IAAIP,cAAJ,CAAmBQ,UAAnB,CAAZ;AACAN,GAAG,CAACO,SAAJ,GAAgB,IAAIT,cAAJ,CAAmBU,cAAnB,CAAhB;AACAR,GAAG,CAACS,MAAJ,GAAa,IAAIX,cAAJ,CAAmBY,WAAnB,CAAb;AACAV,GAAG,CAACW,IAAJ,GAAW,IAAIb,cAAJ,CAAmBc,SAAnB,CAAX;AACAZ,GAAG,CAACa,GAAJ,GAAU,IAAIf,cAAJ,CAAmBgB,QAAnB,CAAV;AAEA,MAAMC,MAAM,GAAGf,GAAf;AAEA;;;;;AAIA,SAASA,GAAT,GAAsE;AAAA,oCAAfgB,IAAe;AAAfA,QAAe;AAAA;;AACpE,MAAIC,aAAa,GAAGD,IAAI,CAAC,CAAD,CAAxB,CADoE,CAGpE;;AACA,MAAI,OAAOC,aAAP,KAAyB,QAAzB,IAAqC,OAAOA,aAAa,CAACC,IAArB,KAA8B,QAAvE,EAAiF;AAE/E;AACA,SAAK,IAAIC,QAAT,IAAqBC,MAAM,CAACC,MAAP,CAAcN,MAAd,CAArB,EAA4C;AAC1C,UAAI,OAAOI,QAAP,KAAoB,UAApB,IAAkCA,QAAQ,CAACD,IAAT,KAAkB,KAAxD,EAA+D;AAC7D,YAAII,OAAO,GAAGH,QAAQ,CAACI,MAAM,CAACD,OAAR,CAAtB;;AAEA,YAAIA,OAAO,IAAIA,OAAO,KAAKpB,KAAvB,KAAiCe,aAAa,YAAYK,OAAzB,IAAoCL,aAAa,CAACC,IAAd,KAAuBI,OAAO,CAACJ,IAApG,CAAJ,EAA+G;AAC7G;AACA,iBAAOC,QAAQ,CAACK,KAAT,CAAeC,SAAf,EAA0BT,IAA1B,CAAP;AACD;AACF;AACF;AACF,GAjBmE,CAmBpE;;;AACA,SAAOhB,GAAG,CAACC,KAAJ,CAAUuB,KAAV,CAAgBC,SAAhB,EAA2BT,IAA3B,CAAP;AACD","names":["Ono","OnoConstructor","singleton","ono","error","Error","eval","EvalError","range","RangeError","reference","ReferenceError","syntax","SyntaxError","type","TypeError","uri","URIError","onoMap","args","originalError","name","typedOno","Object","values","species","Symbol","apply","undefined"],"sourceRoot":"","sources":["../src/singleton.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}