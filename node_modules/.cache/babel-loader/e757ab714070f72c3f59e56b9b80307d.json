{"ast":null,"code":"import { extendError } from \"./extend-error\";\nimport { normalizeArgs, normalizeOptions } from \"./normalize\";\nimport { toJSON as errorToJSON } from \"./to-json\";\nconst constructor = Ono;\nexport { constructor as Ono };\n/**\n * Returns an object containing all properties of the given Error object,\n * which can be used with `JSON.stringify()`.\n */\n\nOno.toJSON = function toJSON(error) {\n  return errorToJSON.call(error);\n};\n/**\n * Creates an `Ono` instance for a specifc error type.\n */\n// tslint:disable-next-line: variable-name\n\n\nfunction Ono(ErrorConstructor, options) {\n  options = normalizeOptions(options);\n\n  function ono() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    let {\n      originalError,\n      props,\n      message\n    } = normalizeArgs(args, options); // Create a new error of the specified type\n\n    let newError = new ErrorConstructor(message); // Extend the error with the properties of the original error and the `props` object\n\n    extendError(newError, originalError, props);\n    return newError;\n  }\n\n  ono[Symbol.species] = ErrorConstructor;\n  return ono;\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,aAAhD;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,WAAtC;AAGA,MAAMC,WAAW,GAAGC,GAApB;AACA,SAASD,WAAW,IAAIC,GAAxB;AAEA;;;;;AAIAA,GAAG,CAACH,MAAJ,GAAa,SAASA,MAAT,CAAqCI,KAArC,EAA6C;AACxD,SAAOH,WAAW,CAACI,IAAZ,CAAiBD,KAAjB,CAAP;AACD,CAFD;AAIA;;;AAGA;;;AACA,SAASD,GAAT,CAAkCG,gBAAlC,EAA6EC,OAA7E,EAAiG;AAC/FA,SAAO,GAAGR,gBAAgB,CAACQ,OAAD,CAA1B;;AAEA,WAASC,GAAT,GAAsE;AAAA,sCAAfC,IAAe;AAAfA,UAAe;AAAA;;AACpE,QAAI;AAAEC,mBAAF;AAAiBC,WAAjB;AAAwBC;AAAxB,QAAoCd,aAAa,CAAOW,IAAP,EAAaF,OAAb,CAArD,CADoE,CAGpE;;AACA,QAAIM,QAAQ,GAAG,IAAKP,gBAAL,CAAuDM,OAAvD,CAAf,CAJoE,CAMpE;;AACAf,eAAW,CAACgB,QAAD,EAAWH,aAAX,EAA0BC,KAA1B,CAAX;AAEA,WAAOE,QAAP;AACD;;AAEDL,KAAG,CAACM,MAAM,CAACC,OAAR,CAAH,GAAsBT,gBAAtB;AACA,SAAOE,GAAP;AACD","names":["extendError","normalizeArgs","normalizeOptions","toJSON","errorToJSON","constructor","Ono","error","call","ErrorConstructor","options","ono","args","originalError","props","message","newError","Symbol","species"],"sourceRoot":"","sources":["../src/constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}