{"ast":null,"code":"import defaultMoment from 'moment';\n\nvar MomentUtils =\n/** @class */\nfunction () {\n  function MomentUtils(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        locale = _b.locale,\n        instance = _b.instance,\n        moment = _b.moment;\n\n    this.yearFormat = \"YYYY\";\n    this.yearMonthFormat = \"MMMM YYYY\";\n    this.dateTime12hFormat = \"MMMM Do hh:mm a\";\n    this.dateTime24hFormat = \"MMMM Do HH:mm\";\n    this.time12hFormat = \"hh:mm A\";\n    this.time24hFormat = \"HH:mm\";\n    this.dateFormat = \"MMMM Do\";\n    this.moment = instance || moment || defaultMoment;\n    this.locale = locale;\n  }\n\n  MomentUtils.prototype.parse = function (value, format) {\n    if (value === \"\") {\n      return null;\n    }\n\n    return this.moment(value, format, true);\n  };\n\n  MomentUtils.prototype.date = function (value) {\n    if (value === null) {\n      return null;\n    }\n\n    var moment = this.moment(value);\n    moment.locale(this.locale);\n    return moment;\n  };\n\n  MomentUtils.prototype.isValid = function (value) {\n    return this.moment(value).isValid();\n  };\n\n  MomentUtils.prototype.isNull = function (date) {\n    return date === null;\n  };\n\n  MomentUtils.prototype.getDiff = function (date, comparing) {\n    return date.diff(comparing);\n  };\n\n  MomentUtils.prototype.isAfter = function (date, value) {\n    return date.isAfter(value);\n  };\n\n  MomentUtils.prototype.isBefore = function (date, value) {\n    return date.isBefore(value);\n  };\n\n  MomentUtils.prototype.isAfterDay = function (date, value) {\n    return date.isAfter(value, \"day\");\n  };\n\n  MomentUtils.prototype.isBeforeDay = function (date, value) {\n    return date.isBefore(value, \"day\");\n  };\n\n  MomentUtils.prototype.isBeforeYear = function (date, value) {\n    return date.isBefore(value, \"year\");\n  };\n\n  MomentUtils.prototype.isAfterYear = function (date, value) {\n    return date.isAfter(value, \"year\");\n  };\n\n  MomentUtils.prototype.startOfDay = function (date) {\n    return date.clone().startOf(\"day\");\n  };\n\n  MomentUtils.prototype.endOfDay = function (date) {\n    return date.clone().endOf(\"day\");\n  };\n\n  MomentUtils.prototype.format = function (date, formatString) {\n    date.locale(this.locale);\n    return date.format(formatString);\n  };\n\n  MomentUtils.prototype.formatNumber = function (numberToFormat) {\n    return numberToFormat;\n  };\n\n  MomentUtils.prototype.getHours = function (date) {\n    return date.get(\"hours\");\n  };\n\n  MomentUtils.prototype.addDays = function (date, count) {\n    return count < 0 ? date.clone().subtract(Math.abs(count), \"days\") : date.clone().add(count, \"days\");\n  };\n\n  MomentUtils.prototype.setHours = function (date, count) {\n    return date.clone().hours(count);\n  };\n\n  MomentUtils.prototype.getMinutes = function (date) {\n    return date.get(\"minutes\");\n  };\n\n  MomentUtils.prototype.setMinutes = function (date, count) {\n    return date.clone().minutes(count);\n  };\n\n  MomentUtils.prototype.getSeconds = function (date) {\n    return date.get(\"seconds\");\n  };\n\n  MomentUtils.prototype.setSeconds = function (date, count) {\n    return date.clone().seconds(count);\n  };\n\n  MomentUtils.prototype.getMonth = function (date) {\n    return date.get(\"month\");\n  };\n\n  MomentUtils.prototype.isSameDay = function (date, comparing) {\n    return date.isSame(comparing, \"day\");\n  };\n\n  MomentUtils.prototype.setMonth = function (date, count) {\n    return date.clone().month(count);\n  };\n\n  MomentUtils.prototype.getMeridiemText = function (ampm) {\n    return ampm === \"am\" ? \"AM\" : \"PM\";\n  };\n\n  MomentUtils.prototype.startOfMonth = function (date) {\n    return date.clone().startOf(\"month\");\n  };\n\n  MomentUtils.prototype.endOfMonth = function (date) {\n    return date.clone().endOf(\"month\");\n  };\n\n  MomentUtils.prototype.getNextMonth = function (date) {\n    return date.clone().add(1, \"month\");\n  };\n\n  MomentUtils.prototype.getPreviousMonth = function (date) {\n    return date.clone().subtract(1, \"month\");\n  };\n\n  MomentUtils.prototype.getMonthArray = function (date) {\n    var firstMonth = date.clone().startOf(\"year\");\n    var monthArray = [firstMonth];\n\n    while (monthArray.length < 12) {\n      var prevMonth = monthArray[monthArray.length - 1];\n      monthArray.push(this.getNextMonth(prevMonth));\n    }\n\n    return monthArray;\n  };\n\n  MomentUtils.prototype.getYear = function (date) {\n    return date.get(\"year\");\n  };\n\n  MomentUtils.prototype.setYear = function (date, year) {\n    return date.clone().set(\"year\", year);\n  };\n\n  MomentUtils.prototype.mergeDateAndTime = function (date, time) {\n    return this.setMinutes(this.setHours(date, this.getHours(time)), this.getMinutes(time));\n  };\n\n  MomentUtils.prototype.getWeekdays = function () {\n    return this.moment.weekdaysShort(true);\n  };\n\n  MomentUtils.prototype.isEqual = function (value, comparing) {\n    if (value === null && comparing === null) {\n      return true;\n    }\n\n    return this.moment(value).isSame(comparing);\n  };\n\n  MomentUtils.prototype.getWeekArray = function (date) {\n    var start = date.clone().startOf(\"month\").startOf(\"week\");\n    var end = date.clone().endOf(\"month\").endOf(\"week\");\n    var count = 0;\n    var current = start;\n    var nestedWeeks = [];\n\n    while (current.isBefore(end)) {\n      var weekNumber = Math.floor(count / 7);\n      nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n      nestedWeeks[weekNumber].push(current);\n      current = current.clone().add(1, \"day\");\n      count += 1;\n    }\n\n    return nestedWeeks;\n  };\n\n  MomentUtils.prototype.getYearRange = function (start, end) {\n    var startDate = this.moment(start).startOf(\"year\");\n    var endDate = this.moment(end).endOf(\"year\");\n    var years = [];\n    var current = startDate;\n\n    while (current.isBefore(endDate)) {\n      years.push(current);\n      current = current.clone().add(1, \"year\");\n    }\n\n    return years;\n  }; // displaying methods\n\n\n  MomentUtils.prototype.getCalendarHeaderText = function (date) {\n    return this.format(date, this.yearMonthFormat);\n  };\n\n  MomentUtils.prototype.getYearText = function (date) {\n    return this.format(date, \"YYYY\");\n  };\n\n  MomentUtils.prototype.getDatePickerHeaderText = function (date) {\n    return this.format(date, \"ddd, MMM D\");\n  };\n\n  MomentUtils.prototype.getDateTimePickerHeaderText = function (date) {\n    return this.format(date, \"MMM D\");\n  };\n\n  MomentUtils.prototype.getMonthText = function (date) {\n    return this.format(date, \"MMMM\");\n  };\n\n  MomentUtils.prototype.getDayText = function (date) {\n    return this.format(date, \"D\");\n  };\n\n  MomentUtils.prototype.getHourText = function (date, ampm) {\n    return this.format(date, ampm ? \"hh\" : \"HH\");\n  };\n\n  MomentUtils.prototype.getMinuteText = function (date) {\n    return this.format(date, \"mm\");\n  };\n\n  MomentUtils.prototype.getSecondText = function (date) {\n    return this.format(date, \"ss\");\n  };\n\n  return MomentUtils;\n}();\n\nexport default MomentUtils;","map":{"version":3,"sources":["/Users/katrinaliu/my-jsonforms-app/node_modules/@date-io/moment/build/index.esm.js"],"names":["defaultMoment","MomentUtils","_a","_b","locale","instance","moment","yearFormat","yearMonthFormat","dateTime12hFormat","dateTime24hFormat","time12hFormat","time24hFormat","dateFormat","prototype","parse","value","format","date","isValid","isNull","getDiff","comparing","diff","isAfter","isBefore","isAfterDay","isBeforeDay","isBeforeYear","isAfterYear","startOfDay","clone","startOf","endOfDay","endOf","formatString","formatNumber","numberToFormat","getHours","get","addDays","count","subtract","Math","abs","add","setHours","hours","getMinutes","setMinutes","minutes","getSeconds","setSeconds","seconds","getMonth","isSameDay","isSame","setMonth","month","getMeridiemText","ampm","startOfMonth","endOfMonth","getNextMonth","getPreviousMonth","getMonthArray","firstMonth","monthArray","length","prevMonth","push","getYear","setYear","year","set","mergeDateAndTime","time","getWeekdays","weekdaysShort","isEqual","getWeekArray","start","end","current","nestedWeeks","weekNumber","floor","getYearRange","startDate","endDate","years","getCalendarHeaderText","getYearText","getDatePickerHeaderText","getDateTimePickerHeaderText","getMonthText","getDayText","getHourText","getMinuteText","getSecondText"],"mappings":"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","sourcesContent":["import defaultMoment from 'moment';\n\nvar MomentUtils = /** @class */ (function () {\n    function MomentUtils(_a) {\n        var _b = _a === void 0 ? {} : _a, locale = _b.locale, instance = _b.instance, moment = _b.moment;\n        this.yearFormat = \"YYYY\";\n        this.yearMonthFormat = \"MMMM YYYY\";\n        this.dateTime12hFormat = \"MMMM Do hh:mm a\";\n        this.dateTime24hFormat = \"MMMM Do HH:mm\";\n        this.time12hFormat = \"hh:mm A\";\n        this.time24hFormat = \"HH:mm\";\n        this.dateFormat = \"MMMM Do\";\n        this.moment = instance || moment || defaultMoment;\n        this.locale = locale;\n    }\n    MomentUtils.prototype.parse = function (value, format) {\n        if (value === \"\") {\n            return null;\n        }\n        return this.moment(value, format, true);\n    };\n    MomentUtils.prototype.date = function (value) {\n        if (value === null) {\n            return null;\n        }\n        var moment = this.moment(value);\n        moment.locale(this.locale);\n        return moment;\n    };\n    MomentUtils.prototype.isValid = function (value) {\n        return this.moment(value).isValid();\n    };\n    MomentUtils.prototype.isNull = function (date) {\n        return date === null;\n    };\n    MomentUtils.prototype.getDiff = function (date, comparing) {\n        return date.diff(comparing);\n    };\n    MomentUtils.prototype.isAfter = function (date, value) {\n        return date.isAfter(value);\n    };\n    MomentUtils.prototype.isBefore = function (date, value) {\n        return date.isBefore(value);\n    };\n    MomentUtils.prototype.isAfterDay = function (date, value) {\n        return date.isAfter(value, \"day\");\n    };\n    MomentUtils.prototype.isBeforeDay = function (date, value) {\n        return date.isBefore(value, \"day\");\n    };\n    MomentUtils.prototype.isBeforeYear = function (date, value) {\n        return date.isBefore(value, \"year\");\n    };\n    MomentUtils.prototype.isAfterYear = function (date, value) {\n        return date.isAfter(value, \"year\");\n    };\n    MomentUtils.prototype.startOfDay = function (date) {\n        return date.clone().startOf(\"day\");\n    };\n    MomentUtils.prototype.endOfDay = function (date) {\n        return date.clone().endOf(\"day\");\n    };\n    MomentUtils.prototype.format = function (date, formatString) {\n        date.locale(this.locale);\n        return date.format(formatString);\n    };\n    MomentUtils.prototype.formatNumber = function (numberToFormat) {\n        return numberToFormat;\n    };\n    MomentUtils.prototype.getHours = function (date) {\n        return date.get(\"hours\");\n    };\n    MomentUtils.prototype.addDays = function (date, count) {\n        return count < 0\n            ? date.clone().subtract(Math.abs(count), \"days\")\n            : date.clone().add(count, \"days\");\n    };\n    MomentUtils.prototype.setHours = function (date, count) {\n        return date.clone().hours(count);\n    };\n    MomentUtils.prototype.getMinutes = function (date) {\n        return date.get(\"minutes\");\n    };\n    MomentUtils.prototype.setMinutes = function (date, count) {\n        return date.clone().minutes(count);\n    };\n    MomentUtils.prototype.getSeconds = function (date) {\n        return date.get(\"seconds\");\n    };\n    MomentUtils.prototype.setSeconds = function (date, count) {\n        return date.clone().seconds(count);\n    };\n    MomentUtils.prototype.getMonth = function (date) {\n        return date.get(\"month\");\n    };\n    MomentUtils.prototype.isSameDay = function (date, comparing) {\n        return date.isSame(comparing, \"day\");\n    };\n    MomentUtils.prototype.setMonth = function (date, count) {\n        return date.clone().month(count);\n    };\n    MomentUtils.prototype.getMeridiemText = function (ampm) {\n        return ampm === \"am\" ? \"AM\" : \"PM\";\n    };\n    MomentUtils.prototype.startOfMonth = function (date) {\n        return date.clone().startOf(\"month\");\n    };\n    MomentUtils.prototype.endOfMonth = function (date) {\n        return date.clone().endOf(\"month\");\n    };\n    MomentUtils.prototype.getNextMonth = function (date) {\n        return date.clone().add(1, \"month\");\n    };\n    MomentUtils.prototype.getPreviousMonth = function (date) {\n        return date.clone().subtract(1, \"month\");\n    };\n    MomentUtils.prototype.getMonthArray = function (date) {\n        var firstMonth = date.clone().startOf(\"year\");\n        var monthArray = [firstMonth];\n        while (monthArray.length < 12) {\n            var prevMonth = monthArray[monthArray.length - 1];\n            monthArray.push(this.getNextMonth(prevMonth));\n        }\n        return monthArray;\n    };\n    MomentUtils.prototype.getYear = function (date) {\n        return date.get(\"year\");\n    };\n    MomentUtils.prototype.setYear = function (date, year) {\n        return date.clone().set(\"year\", year);\n    };\n    MomentUtils.prototype.mergeDateAndTime = function (date, time) {\n        return this.setMinutes(this.setHours(date, this.getHours(time)), this.getMinutes(time));\n    };\n    MomentUtils.prototype.getWeekdays = function () {\n        return this.moment.weekdaysShort(true);\n    };\n    MomentUtils.prototype.isEqual = function (value, comparing) {\n        if (value === null && comparing === null) {\n            return true;\n        }\n        return this.moment(value).isSame(comparing);\n    };\n    MomentUtils.prototype.getWeekArray = function (date) {\n        var start = date\n            .clone()\n            .startOf(\"month\")\n            .startOf(\"week\");\n        var end = date\n            .clone()\n            .endOf(\"month\")\n            .endOf(\"week\");\n        var count = 0;\n        var current = start;\n        var nestedWeeks = [];\n        while (current.isBefore(end)) {\n            var weekNumber = Math.floor(count / 7);\n            nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n            nestedWeeks[weekNumber].push(current);\n            current = current.clone().add(1, \"day\");\n            count += 1;\n        }\n        return nestedWeeks;\n    };\n    MomentUtils.prototype.getYearRange = function (start, end) {\n        var startDate = this.moment(start).startOf(\"year\");\n        var endDate = this.moment(end).endOf(\"year\");\n        var years = [];\n        var current = startDate;\n        while (current.isBefore(endDate)) {\n            years.push(current);\n            current = current.clone().add(1, \"year\");\n        }\n        return years;\n    };\n    // displaying methods\n    MomentUtils.prototype.getCalendarHeaderText = function (date) {\n        return this.format(date, this.yearMonthFormat);\n    };\n    MomentUtils.prototype.getYearText = function (date) {\n        return this.format(date, \"YYYY\");\n    };\n    MomentUtils.prototype.getDatePickerHeaderText = function (date) {\n        return this.format(date, \"ddd, MMM D\");\n    };\n    MomentUtils.prototype.getDateTimePickerHeaderText = function (date) {\n        return this.format(date, \"MMM D\");\n    };\n    MomentUtils.prototype.getMonthText = function (date) {\n        return this.format(date, \"MMMM\");\n    };\n    MomentUtils.prototype.getDayText = function (date) {\n        return this.format(date, \"D\");\n    };\n    MomentUtils.prototype.getHourText = function (date, ampm) {\n        return this.format(date, ampm ? \"hh\" : \"HH\");\n    };\n    MomentUtils.prototype.getMinuteText = function (date) {\n        return this.format(date, \"mm\");\n    };\n    MomentUtils.prototype.getSecondText = function (date) {\n        return this.format(date, \"ss\");\n    };\n    return MomentUtils;\n}());\n\nexport default MomentUtils;\n"]},"metadata":{},"sourceType":"module"}