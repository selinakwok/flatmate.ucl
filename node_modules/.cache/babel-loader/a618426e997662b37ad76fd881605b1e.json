{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\n\nvar cloneDeep_1 = tslib_1.__importDefault(require(\"lodash/cloneDeep\"));\n\nvar set_1 = tslib_1.__importDefault(require(\"lodash/fp/set\"));\n\nvar get_1 = tslib_1.__importDefault(require(\"lodash/get\"));\n\nvar filter_1 = tslib_1.__importDefault(require(\"lodash/filter\"));\n\nvar isEqual_1 = tslib_1.__importDefault(require(\"lodash/isEqual\"));\n\nvar isFunction_1 = tslib_1.__importDefault(require(\"lodash/isFunction\"));\n\nvar actions_1 = require(\"../actions\");\n\nvar validator_1 = require(\"../util/validator\");\n\nvar validate = function (validator, data) {\n  var valid = validator(data);\n\n  if (valid) {\n    return [];\n  }\n\n  return validator.errors;\n};\n\nexports.sanitizeErrors = function (validator, data) {\n  if (validator === alwaysValid) {\n    return [];\n  }\n\n  return validate(validator, data).map(function (error) {\n    error.dataPath = error.dataPath.replace(/\\//g, '.').substr(1);\n    return error;\n  });\n};\n\nvar alwaysValid = function () {\n  return true;\n};\n\nvar initState = {\n  data: {},\n  schema: {},\n  uischema: undefined,\n  errors: [],\n  validator: alwaysValid,\n  ajv: undefined,\n  refParserOptions: undefined,\n  validationMode: 'ValidateAndShow'\n};\n\nvar reuseAjvForSchema = function (ajv, schema) {\n  if (schema.hasOwnProperty('id') || schema.hasOwnProperty('$id')) {\n    ajv.removeSchema(schema);\n  }\n\n  return ajv;\n};\n\nvar getOrCreateAjv = function (state, action) {\n  if (action) {\n    if (hasAjvOption(action.options)) {\n      // options object with ajv\n      return action.options.ajv;\n    } else if (action.options !== undefined && !hasRefParserOption(action.options)) {\n      // it is not an option object => should be ajv itself => check for compile function\n      if (isFunction_1.default(action.options.compile)) {\n        return action.options;\n      }\n    }\n  }\n\n  if (state.ajv) {\n    return (action === null || action === void 0 ? void 0 : action.schema) ? reuseAjvForSchema(state.ajv, action.schema) : state.ajv;\n  }\n\n  return validator_1.createAjv();\n};\n\nvar getRefParserOptions = function (state, action) {\n  if (action && hasRefParserOption(action.options)) {\n    return action.options.refParserOptions;\n  }\n\n  return state.refParserOptions;\n};\n\nvar hasRefParserOption = function (option) {\n  if (option) {\n    return option.refParserOptions !== undefined;\n  }\n\n  return false;\n};\n\nvar hasAjvOption = function (option) {\n  if (option) {\n    return option.ajv !== undefined;\n  }\n\n  return false;\n};\n\nvar getValidationMode = function (state, action) {\n  if (action && hasValidationModeOption(action.options)) {\n    return action.options.validationMode;\n  }\n\n  return state.validationMode;\n};\n\nvar hasValidationModeOption = function (option) {\n  if (option) {\n    return option.validationMode !== undefined;\n  }\n\n  return false;\n}; // tslint:disable-next-line: cyclomatic-complexity\n\n\nexports.coreReducer = function (state, action) {\n  if (state === void 0) {\n    state = initState;\n  }\n\n  switch (action.type) {\n    case actions_1.INIT:\n      {\n        var thisAjv = getOrCreateAjv(state, action);\n        var o = getRefParserOptions(state, action);\n        var validationMode = getValidationMode(state, action);\n        var v = validationMode === 'NoValidation' ? alwaysValid : thisAjv.compile(action.schema);\n        var e = exports.sanitizeErrors(v, action.data);\n        return tslib_1.__assign(tslib_1.__assign({}, state), {\n          data: action.data,\n          schema: action.schema,\n          uischema: action.uischema,\n          errors: e,\n          validator: v,\n          ajv: thisAjv,\n          refParserOptions: o,\n          validationMode: validationMode\n        });\n      }\n\n    case actions_1.UPDATE_CORE:\n      {\n        var thisAjv = getOrCreateAjv(state, action);\n        var refParserOptions = getRefParserOptions(state, action);\n        var validationMode = getValidationMode(state, action);\n        var validator = state.validator;\n        var errors = state.errors;\n\n        if (state.schema !== action.schema || state.validationMode !== validationMode || state.ajv !== thisAjv) {\n          // revalidate only if necessary\n          validator = validationMode === 'NoValidation' ? alwaysValid : thisAjv.compile(action.schema);\n          errors = exports.sanitizeErrors(validator, action.data);\n        } else if (state.data !== action.data) {\n          errors = exports.sanitizeErrors(validator, action.data);\n        }\n\n        var stateChanged = state.data !== action.data || state.schema !== action.schema || state.uischema !== action.uischema || state.ajv !== thisAjv || state.errors !== errors || state.validator !== validator || state.refParserOptions !== refParserOptions || state.validationMode !== validationMode;\n        return stateChanged ? tslib_1.__assign(tslib_1.__assign({}, state), {\n          data: state.data === action.data ? state.data : action.data,\n          schema: state.schema === action.schema ? state.schema : action.schema,\n          uischema: state.uischema === action.uischema ? state.uischema : action.uischema,\n          ajv: thisAjv === state.ajv ? state.ajv : thisAjv,\n          errors: isEqual_1.default(errors, state.errors) ? state.errors : errors,\n          validator: validator === state.validator ? state.validator : validator,\n          refParserOptions: refParserOptions === state.refParserOptions ? state.refParserOptions : refParserOptions,\n          validationMode: validationMode === state.validationMode ? state.validationMode : validationMode\n        }) : state;\n      }\n\n    case actions_1.SET_AJV:\n      {\n        var currentAjv = action.ajv;\n        var validator = state.validationMode === 'NoValidation' ? alwaysValid : currentAjv.compile(state.schema);\n        var errors = exports.sanitizeErrors(validator, state.data);\n        return tslib_1.__assign(tslib_1.__assign({}, state), {\n          validator: validator,\n          errors: errors\n        });\n      }\n\n    case actions_1.SET_SCHEMA:\n      {\n        var needsNewValidator = action.schema && state.ajv && state.validationMode !== 'NoValidation';\n        var v = needsNewValidator ? reuseAjvForSchema(state.ajv, action.schema).compile(action.schema) : state.validator;\n        var errors = exports.sanitizeErrors(v, state.data);\n        return tslib_1.__assign(tslib_1.__assign({}, state), {\n          validator: v,\n          schema: action.schema,\n          errors: errors\n        });\n      }\n\n    case actions_1.SET_UISCHEMA:\n      {\n        return tslib_1.__assign(tslib_1.__assign({}, state), {\n          uischema: action.uischema\n        });\n      }\n\n    case actions_1.UPDATE_DATA:\n      {\n        if (action.path === undefined || action.path === null) {\n          return state;\n        } else if (action.path === '') {\n          // empty path is ok\n          var result = action.updater(cloneDeep_1.default(state.data));\n          var errors = exports.sanitizeErrors(state.validator, result);\n          return tslib_1.__assign(tslib_1.__assign({}, state), {\n            data: result,\n            errors: errors\n          });\n        } else {\n          var oldData = get_1.default(state.data, action.path);\n          var newData = action.updater(cloneDeep_1.default(oldData));\n          var newState = set_1.default(action.path, newData, state.data === undefined ? {} : state.data);\n          var errors = exports.sanitizeErrors(state.validator, newState);\n          return tslib_1.__assign(tslib_1.__assign({}, state), {\n            data: newState,\n            errors: errors\n          });\n        }\n      }\n\n    case actions_1.UPDATE_ERRORS:\n      {\n        return tslib_1.__assign(tslib_1.__assign({}, state), {\n          errors: action.errors\n        });\n      }\n\n    case actions_1.SET_VALIDATION_MODE:\n      {\n        if (state.validationMode === action.validationMode) {\n          return state;\n        }\n\n        if (action.validationMode === 'NoValidation') {\n          var errors = exports.sanitizeErrors(alwaysValid, state.data);\n          return tslib_1.__assign(tslib_1.__assign({}, state), {\n            validator: alwaysValid,\n            errors: errors,\n            validationMode: action.validationMode\n          });\n        }\n\n        if (state.validationMode === 'NoValidation') {\n          var validator = reuseAjvForSchema(state.ajv, state.schema).compile(state.schema);\n          var errors = exports.sanitizeErrors(validator, state.data);\n          return tslib_1.__assign(tslib_1.__assign({}, state), {\n            validator: validator,\n            errors: errors,\n            validationMode: action.validationMode\n          });\n        }\n\n        return tslib_1.__assign(tslib_1.__assign({}, state), {\n          validationMode: action.validationMode\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexports.extractData = function (state) {\n  return get_1.default(state, 'data');\n};\n\nexports.extractSchema = function (state) {\n  return get_1.default(state, 'schema');\n};\n\nexports.extractUiSchema = function (state) {\n  return get_1.default(state, 'uischema');\n};\n\nexports.extractAjv = function (state) {\n  return get_1.default(state, 'ajv');\n};\n\nexports.errorsAt = function (instancePath, schema, matchPath) {\n  return function (errors) {\n    // Get data paths of oneOf and anyOf errors to later determine whether an error occurred inside a subschema of oneOf or anyOf.\n    var combinatorPaths = filter_1.default(errors, function (error) {\n      return error.keyword === 'oneOf' || error.keyword === 'anyOf';\n    }).map(function (error) {\n      return error.dataPath;\n    });\n    return filter_1.default(errors, function (error) {\n      // Filter errors that match any keyword that we don't want to show in the UI\n      if (filteredErrorKeywords.indexOf(error.keyword) !== -1) {\n        return false;\n      }\n\n      var result = matchPath(error.dataPath); // In anyOf and oneOf blocks with \"primitive\" (i.e. string, number etc.) or array subschemas,\n      // we want to make sure that errors are only shown for the correct subschema.\n      // Therefore, we compare the error's parent schema with the property's schema.\n      // In the primitive case the error's data path is the same for all subschemas:\n      // It directly points to the property defining the anyOf/oneOf.\n      // The same holds true for errors on the array level (e.g. min item amount).\n      // In contrast, this comparison must not be done for errors whose parent schema defines an object\n      // because the parent schema can never match the property schema (e.g. for 'required' checks).\n\n      var parentSchema = error.parentSchema;\n\n      if (result && !isObjectSchema(parentSchema) && combinatorPaths.findIndex(function (p) {\n        return instancePath.startsWith(p);\n      }) !== -1) {\n        result = result && isEqual_1.default(parentSchema, schema);\n      }\n\n      return result;\n    });\n  };\n};\n/**\n * @returns true if the schema describes an object.\n */\n\n\nvar isObjectSchema = function (schema) {\n  return (schema === null || schema === void 0 ? void 0 : schema.type) === 'object' || !!(schema === null || schema === void 0 ? void 0 : schema.properties);\n};\n/**\n * The error-type of an AJV error is defined by its `keyword` property.\n * Certain errors are filtered because they don't fit to any rendered control.\n * All of them have in common that we don't want to show them in the UI\n * because controls will show the actual reason why they don't match their correponding sub schema.\n * - additionalProperties: Indicates that a property is present that is not defined in the schema.\n *      Jsonforms only allows to edit defined properties. These errors occur if an oneOf doesn't match.\n * - allOf: Indicates that not all of the allOf definitions match as a whole.\n * - anyOf: Indicates that an anyOf definition itself is not valid because none of its subschemas matches.\n * - oneOf: Indicates that an oneOf definition itself is not valid because not exactly one of its subschemas matches.\n */\n\n\nvar filteredErrorKeywords = ['additionalProperties', 'allOf', 'anyOf', 'oneOf'];\n\nvar getErrorsAt = function (instancePath, schema, matchPath) {\n  return function (state) {\n    return exports.errorsAt(instancePath, schema, matchPath)(state.validationMode === 'ValidateAndHide' ? [] : state.errors);\n  };\n};\n\nexports.errorAt = function (instancePath, schema) {\n  return getErrorsAt(instancePath, schema, function (path) {\n    return path === instancePath;\n  });\n};\n\nexports.subErrorsAt = function (instancePath, schema) {\n  return getErrorsAt(instancePath, schema, function (path) {\n    return path.startsWith(instancePath);\n  });\n};\n\nexports.extractRefParserOptions = function (state) {\n  return get_1.default(state, 'refParserOptions');\n};","map":{"version":3,"mappings":"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","names":["validate","validator","data","valid","errors","exports","alwaysValid","map","error","dataPath","replace","substr","initState","schema","uischema","undefined","ajv","refParserOptions","validationMode","reuseAjvForSchema","hasOwnProperty","removeSchema","getOrCreateAjv","state","action","hasAjvOption","options","hasRefParserOption","isFunction_1","compile","validator_1","getRefParserOptions","option","getValidationMode","hasValidationModeOption","type","actions_1","thisAjv","o","v","e","stateChanged","tslib_1","isEqual_1","currentAjv","needsNewValidator","path","result","updater","cloneDeep_1","oldData","get_1","newData","newState","set_1","instancePath","matchPath","combinatorPaths","filter_1","keyword","filteredErrorKeywords","indexOf","parentSchema","isObjectSchema","findIndex","startsWith","p","properties","getErrorsAt"],"sourceRoot":"","sources":["../../src/reducers/core.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}